//------------------------------------------------------------------------------
// <auto-generated>
//	This code was generated from the "BranchingTechniques.tt" T4 Text Template.
// </auto-generated>
//------------------------------------------------------------------------------

using BenchmarkDotNet.Attributes;

namespace BranchingTechniques
{
	public class BranchingTechniquesBenchmarks
	{
		int temp = default;

		[Benchmark]
		public void switchStatement1()
		{
			for (int i = 0; i < 1; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression1()
		{
			for (int i = 0; i < 1; i++)
			{
				temp = i switch
				{
					0 => i,
				};
			}
		}

		[Benchmark]
		public void if1()
		{
			for (int i = 0; i < 1; i++)
			{
				if (i == 0) temp = i;
			}
		}

		[Benchmark]
		public void conditional1()
		{
			for (int i = 0; i < 1; i++)
			{
				temp =
					i == 0 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement2()
		{
			for (int i = 0; i < 2; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression2()
		{
			for (int i = 0; i < 2; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
				};
			}
		}

		[Benchmark]
		public void if2()
		{
			for (int i = 0; i < 2; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
			}
		}

		[Benchmark]
		public void conditional2()
		{
			for (int i = 0; i < 2; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement3()
		{
			for (int i = 0; i < 3; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
					case 2: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression3()
		{
			for (int i = 0; i < 3; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
					2 => i,
				};
			}
		}

		[Benchmark]
		public void if3()
		{
			for (int i = 0; i < 3; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
				if (i == 2) temp = i;
			}
		}

		[Benchmark]
		public void conditional3()
		{
			for (int i = 0; i < 3; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					i == 2 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement4()
		{
			for (int i = 0; i < 4; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
					case 2: temp = i; break;
					case 3: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression4()
		{
			for (int i = 0; i < 4; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
					2 => i,
					3 => i,
				};
			}
		}

		[Benchmark]
		public void if4()
		{
			for (int i = 0; i < 4; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
				if (i == 2) temp = i;
				if (i == 3) temp = i;
			}
		}

		[Benchmark]
		public void conditional4()
		{
			for (int i = 0; i < 4; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					i == 2 ? i :
					i == 3 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement5()
		{
			for (int i = 0; i < 5; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
					case 2: temp = i; break;
					case 3: temp = i; break;
					case 4: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression5()
		{
			for (int i = 0; i < 5; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
					2 => i,
					3 => i,
					4 => i,
				};
			}
		}

		[Benchmark]
		public void if5()
		{
			for (int i = 0; i < 5; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
				if (i == 2) temp = i;
				if (i == 3) temp = i;
				if (i == 4) temp = i;
			}
		}

		[Benchmark]
		public void conditional5()
		{
			for (int i = 0; i < 5; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					i == 2 ? i :
					i == 3 ? i :
					i == 4 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement10()
		{
			for (int i = 0; i < 10; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
					case 2: temp = i; break;
					case 3: temp = i; break;
					case 4: temp = i; break;
					case 5: temp = i; break;
					case 6: temp = i; break;
					case 7: temp = i; break;
					case 8: temp = i; break;
					case 9: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression10()
		{
			for (int i = 0; i < 10; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
					2 => i,
					3 => i,
					4 => i,
					5 => i,
					6 => i,
					7 => i,
					8 => i,
					9 => i,
				};
			}
		}

		[Benchmark]
		public void if10()
		{
			for (int i = 0; i < 10; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
				if (i == 2) temp = i;
				if (i == 3) temp = i;
				if (i == 4) temp = i;
				if (i == 5) temp = i;
				if (i == 6) temp = i;
				if (i == 7) temp = i;
				if (i == 8) temp = i;
				if (i == 9) temp = i;
			}
		}

		[Benchmark]
		public void conditional10()
		{
			for (int i = 0; i < 10; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					i == 2 ? i :
					i == 3 ? i :
					i == 4 ? i :
					i == 5 ? i :
					i == 6 ? i :
					i == 7 ? i :
					i == 8 ? i :
					i == 9 ? i :
					default;
			}
		}

		[Benchmark]
		public void switchStatement100()
		{
			for (int i = 0; i < 100; i++)
			{
				switch (i)
				{
					case 0: temp = i; break;
					case 1: temp = i; break;
					case 2: temp = i; break;
					case 3: temp = i; break;
					case 4: temp = i; break;
					case 5: temp = i; break;
					case 6: temp = i; break;
					case 7: temp = i; break;
					case 8: temp = i; break;
					case 9: temp = i; break;
					case 10: temp = i; break;
					case 11: temp = i; break;
					case 12: temp = i; break;
					case 13: temp = i; break;
					case 14: temp = i; break;
					case 15: temp = i; break;
					case 16: temp = i; break;
					case 17: temp = i; break;
					case 18: temp = i; break;
					case 19: temp = i; break;
					case 20: temp = i; break;
					case 21: temp = i; break;
					case 22: temp = i; break;
					case 23: temp = i; break;
					case 24: temp = i; break;
					case 25: temp = i; break;
					case 26: temp = i; break;
					case 27: temp = i; break;
					case 28: temp = i; break;
					case 29: temp = i; break;
					case 30: temp = i; break;
					case 31: temp = i; break;
					case 32: temp = i; break;
					case 33: temp = i; break;
					case 34: temp = i; break;
					case 35: temp = i; break;
					case 36: temp = i; break;
					case 37: temp = i; break;
					case 38: temp = i; break;
					case 39: temp = i; break;
					case 40: temp = i; break;
					case 41: temp = i; break;
					case 42: temp = i; break;
					case 43: temp = i; break;
					case 44: temp = i; break;
					case 45: temp = i; break;
					case 46: temp = i; break;
					case 47: temp = i; break;
					case 48: temp = i; break;
					case 49: temp = i; break;
					case 50: temp = i; break;
					case 51: temp = i; break;
					case 52: temp = i; break;
					case 53: temp = i; break;
					case 54: temp = i; break;
					case 55: temp = i; break;
					case 56: temp = i; break;
					case 57: temp = i; break;
					case 58: temp = i; break;
					case 59: temp = i; break;
					case 60: temp = i; break;
					case 61: temp = i; break;
					case 62: temp = i; break;
					case 63: temp = i; break;
					case 64: temp = i; break;
					case 65: temp = i; break;
					case 66: temp = i; break;
					case 67: temp = i; break;
					case 68: temp = i; break;
					case 69: temp = i; break;
					case 70: temp = i; break;
					case 71: temp = i; break;
					case 72: temp = i; break;
					case 73: temp = i; break;
					case 74: temp = i; break;
					case 75: temp = i; break;
					case 76: temp = i; break;
					case 77: temp = i; break;
					case 78: temp = i; break;
					case 79: temp = i; break;
					case 80: temp = i; break;
					case 81: temp = i; break;
					case 82: temp = i; break;
					case 83: temp = i; break;
					case 84: temp = i; break;
					case 85: temp = i; break;
					case 86: temp = i; break;
					case 87: temp = i; break;
					case 88: temp = i; break;
					case 89: temp = i; break;
					case 90: temp = i; break;
					case 91: temp = i; break;
					case 92: temp = i; break;
					case 93: temp = i; break;
					case 94: temp = i; break;
					case 95: temp = i; break;
					case 96: temp = i; break;
					case 97: temp = i; break;
					case 98: temp = i; break;
					case 99: temp = i; break;
				}
			}
		}

		[Benchmark]
		public void switchExpression100()
		{
			for (int i = 0; i < 100; i++)
			{
				temp = i switch
				{
					0 => i,
					1 => i,
					2 => i,
					3 => i,
					4 => i,
					5 => i,
					6 => i,
					7 => i,
					8 => i,
					9 => i,
					10 => i,
					11 => i,
					12 => i,
					13 => i,
					14 => i,
					15 => i,
					16 => i,
					17 => i,
					18 => i,
					19 => i,
					20 => i,
					21 => i,
					22 => i,
					23 => i,
					24 => i,
					25 => i,
					26 => i,
					27 => i,
					28 => i,
					29 => i,
					30 => i,
					31 => i,
					32 => i,
					33 => i,
					34 => i,
					35 => i,
					36 => i,
					37 => i,
					38 => i,
					39 => i,
					40 => i,
					41 => i,
					42 => i,
					43 => i,
					44 => i,
					45 => i,
					46 => i,
					47 => i,
					48 => i,
					49 => i,
					50 => i,
					51 => i,
					52 => i,
					53 => i,
					54 => i,
					55 => i,
					56 => i,
					57 => i,
					58 => i,
					59 => i,
					60 => i,
					61 => i,
					62 => i,
					63 => i,
					64 => i,
					65 => i,
					66 => i,
					67 => i,
					68 => i,
					69 => i,
					70 => i,
					71 => i,
					72 => i,
					73 => i,
					74 => i,
					75 => i,
					76 => i,
					77 => i,
					78 => i,
					79 => i,
					80 => i,
					81 => i,
					82 => i,
					83 => i,
					84 => i,
					85 => i,
					86 => i,
					87 => i,
					88 => i,
					89 => i,
					90 => i,
					91 => i,
					92 => i,
					93 => i,
					94 => i,
					95 => i,
					96 => i,
					97 => i,
					98 => i,
					99 => i,
				};
			}
		}

		[Benchmark]
		public void if100()
		{
			for (int i = 0; i < 100; i++)
			{
				if (i == 0) temp = i;
				if (i == 1) temp = i;
				if (i == 2) temp = i;
				if (i == 3) temp = i;
				if (i == 4) temp = i;
				if (i == 5) temp = i;
				if (i == 6) temp = i;
				if (i == 7) temp = i;
				if (i == 8) temp = i;
				if (i == 9) temp = i;
				if (i == 10) temp = i;
				if (i == 11) temp = i;
				if (i == 12) temp = i;
				if (i == 13) temp = i;
				if (i == 14) temp = i;
				if (i == 15) temp = i;
				if (i == 16) temp = i;
				if (i == 17) temp = i;
				if (i == 18) temp = i;
				if (i == 19) temp = i;
				if (i == 20) temp = i;
				if (i == 21) temp = i;
				if (i == 22) temp = i;
				if (i == 23) temp = i;
				if (i == 24) temp = i;
				if (i == 25) temp = i;
				if (i == 26) temp = i;
				if (i == 27) temp = i;
				if (i == 28) temp = i;
				if (i == 29) temp = i;
				if (i == 30) temp = i;
				if (i == 31) temp = i;
				if (i == 32) temp = i;
				if (i == 33) temp = i;
				if (i == 34) temp = i;
				if (i == 35) temp = i;
				if (i == 36) temp = i;
				if (i == 37) temp = i;
				if (i == 38) temp = i;
				if (i == 39) temp = i;
				if (i == 40) temp = i;
				if (i == 41) temp = i;
				if (i == 42) temp = i;
				if (i == 43) temp = i;
				if (i == 44) temp = i;
				if (i == 45) temp = i;
				if (i == 46) temp = i;
				if (i == 47) temp = i;
				if (i == 48) temp = i;
				if (i == 49) temp = i;
				if (i == 50) temp = i;
				if (i == 51) temp = i;
				if (i == 52) temp = i;
				if (i == 53) temp = i;
				if (i == 54) temp = i;
				if (i == 55) temp = i;
				if (i == 56) temp = i;
				if (i == 57) temp = i;
				if (i == 58) temp = i;
				if (i == 59) temp = i;
				if (i == 60) temp = i;
				if (i == 61) temp = i;
				if (i == 62) temp = i;
				if (i == 63) temp = i;
				if (i == 64) temp = i;
				if (i == 65) temp = i;
				if (i == 66) temp = i;
				if (i == 67) temp = i;
				if (i == 68) temp = i;
				if (i == 69) temp = i;
				if (i == 70) temp = i;
				if (i == 71) temp = i;
				if (i == 72) temp = i;
				if (i == 73) temp = i;
				if (i == 74) temp = i;
				if (i == 75) temp = i;
				if (i == 76) temp = i;
				if (i == 77) temp = i;
				if (i == 78) temp = i;
				if (i == 79) temp = i;
				if (i == 80) temp = i;
				if (i == 81) temp = i;
				if (i == 82) temp = i;
				if (i == 83) temp = i;
				if (i == 84) temp = i;
				if (i == 85) temp = i;
				if (i == 86) temp = i;
				if (i == 87) temp = i;
				if (i == 88) temp = i;
				if (i == 89) temp = i;
				if (i == 90) temp = i;
				if (i == 91) temp = i;
				if (i == 92) temp = i;
				if (i == 93) temp = i;
				if (i == 94) temp = i;
				if (i == 95) temp = i;
				if (i == 96) temp = i;
				if (i == 97) temp = i;
				if (i == 98) temp = i;
				if (i == 99) temp = i;
			}
		}

		[Benchmark]
		public void conditional100()
		{
			for (int i = 0; i < 100; i++)
			{
				temp =
					i == 0 ? i :
					i == 1 ? i :
					i == 2 ? i :
					i == 3 ? i :
					i == 4 ? i :
					i == 5 ? i :
					i == 6 ? i :
					i == 7 ? i :
					i == 8 ? i :
					i == 9 ? i :
					i == 10 ? i :
					i == 11 ? i :
					i == 12 ? i :
					i == 13 ? i :
					i == 14 ? i :
					i == 15 ? i :
					i == 16 ? i :
					i == 17 ? i :
					i == 18 ? i :
					i == 19 ? i :
					i == 20 ? i :
					i == 21 ? i :
					i == 22 ? i :
					i == 23 ? i :
					i == 24 ? i :
					i == 25 ? i :
					i == 26 ? i :
					i == 27 ? i :
					i == 28 ? i :
					i == 29 ? i :
					i == 30 ? i :
					i == 31 ? i :
					i == 32 ? i :
					i == 33 ? i :
					i == 34 ? i :
					i == 35 ? i :
					i == 36 ? i :
					i == 37 ? i :
					i == 38 ? i :
					i == 39 ? i :
					i == 40 ? i :
					i == 41 ? i :
					i == 42 ? i :
					i == 43 ? i :
					i == 44 ? i :
					i == 45 ? i :
					i == 46 ? i :
					i == 47 ? i :
					i == 48 ? i :
					i == 49 ? i :
					i == 50 ? i :
					i == 51 ? i :
					i == 52 ? i :
					i == 53 ? i :
					i == 54 ? i :
					i == 55 ? i :
					i == 56 ? i :
					i == 57 ? i :
					i == 58 ? i :
					i == 59 ? i :
					i == 60 ? i :
					i == 61 ? i :
					i == 62 ? i :
					i == 63 ? i :
					i == 64 ? i :
					i == 65 ? i :
					i == 66 ? i :
					i == 67 ? i :
					i == 68 ? i :
					i == 69 ? i :
					i == 70 ? i :
					i == 71 ? i :
					i == 72 ? i :
					i == 73 ? i :
					i == 74 ? i :
					i == 75 ? i :
					i == 76 ? i :
					i == 77 ? i :
					i == 78 ? i :
					i == 79 ? i :
					i == 80 ? i :
					i == 81 ? i :
					i == 82 ? i :
					i == 83 ? i :
					i == 84 ? i :
					i == 85 ? i :
					i == 86 ? i :
					i == 87 ? i :
					i == 88 ? i :
					i == 89 ? i :
					i == 90 ? i :
					i == 91 ? i :
					i == 92 ? i :
					i == 93 ? i :
					i == 94 ? i :
					i == 95 ? i :
					i == 96 ? i :
					i == 97 ? i :
					i == 98 ? i :
					i == 99 ? i :
					default;
			}
		}
	}
}
